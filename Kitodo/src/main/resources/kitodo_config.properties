#
# (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
#
# This file is part of the Kitodo project.
#
# It is licensed under GNU General Public License version 3 or later.
#
# For the full copyright and license information, please read the
# GPL3-License.txt file that was distributed with this source code.
#

# =============================================================================
#      FILE AND DIRECTORY MANAGEMENT
# =============================================================================
# -----------------------------------
# Directories
# -----------------------------------

# Absolute path to the directory that the configuration files are stored in,
# terminated by a directory separator ("/").
# Note: Several, but not all configuration files are read from that directory.
#       You may want to decide to point this path to the directory where
#       the servlet container will extract the configuration files to (like
#       webapps/kitodo/WEB-INF/classes) in order to make sure they are found.
directory.config=/usr/local/kitodo/config/

# Absolute path to the directory that the rule set definition files will be
# read from. It must be terminated by a directory separator ("/").
directory.rulesets=/usr/local/kitodo/rulesets/

# Absolute path to the directory that XSLT files are stored in which are used
# to transform the "XML log" (as visible from the XML button in the processes
# list) to a downloadable PDF docket which can be enclosed with the physical
# binding units to digitise.
# The path must be terminated by a directory separator ("/").
directory.xslt=/usr/local/kitodo/xslt/

# Absolute path to the directory that process directories will be created in,
# terminated by a directory separator ("/").
# The servlet container must have write permission to that directory.
directory.metadata=/usr/local/kitodo/metadata/

# Absolute path to the base directory of the users' home directories,
# terminated by a directory separator ("/").
# If a user accepts a task to work on which
# will require him or her to have access permission to the data of a process,
# a symbolic link to the process directory in question will be created in his
# or her home directory that will be removed again after finishing the task.
# Note: If LDAP is used, the users' home dirs will instead be read from LDAP
directory.users=/usr/local/kitodo/users/

# Absolute path to a folder the application can temporarily create files in,
# terminated by a directory separator ("/").
directory.temp=/usr/local/kitodo/temp/

# Path to directory in which BPMN diagrams are stored
directory.diagrams=/usr/local/kitodo/diagrams/

# Module configuration
directory.modules=/usr/local/kitodo/modules/

# Absolute path to the plugins directory,
# terminated by a directory separator ("/").
# The plugins directory must contain a subfolder for each plugin type, which
# must be named "command", "import", "opac", "step" and "validation", resp.
# In each folder .jar files containing plugin implementations can be placed.
directory.plugins=/usr/local/kitodo/plugins/

# Falls Dateien zum Debuggen / Tracen geschrieben werden sollen, hier ein Verzeichnis angeben
directory.debug=/usr/local/kitodo/debug/


# -----------------------------------
# Directory management
# -----------------------------------

# following parameters DIRECTORY_PREFIX and DIRECTORY_SUFFIX are used on creating image directory
# when a process is created.
# Resulting image directory name is <DIRECTORY_PREFIX>_<ProcessTitle>_<DIRECTORY_SUFFIX>
#
# prefix of image directory name created on process creation
DIRECTORY_PREFIX=master
#
# directory suffix for created image directory on process creation
DIRECTORY_SUFFIX=media

importUseOldConfiguration=false

# creation and export of process sub-directories
# e.g. images/(processtitle)_tif&ocr/(processtitle)_pdf
# (processtitle) is a placeholder for the process title
# If you comment in the parameter processDirs without a value,
# the result is that the whole process directory
# will be exported and no directory well be created.
# If you leave the parameter commented out,
# the whole functionality is disabled.
# Using the processDirs parameter is always an addition
# to the existing folder creating and exporting functions of Kitodo.Production.
# processDirs=

# set if Master-Images-Folder 'orig_' should be used at all
useOrigFolder=true


# -----------------------------------
# Directory and symbolic link management
# -----------------------------------

# For each process, a process directory will be created to store the associated
# files in them. If a user accepts a task to work on which will require him
# or her to have access permission to the data of a process, a symbolic link
# to the process directory in question will be created in his or her home
# directory that will be removed again after finishing the task. Since the
# application is based on Java 6 which cannot handle file system permissions,
# scripts are called to do these things. The scripts must have been configured
# to have sufficient permissions to do whatever they should do.
#
# For examples of these scripts, see the *.sh files in subdirectory `script`
# of your Kitodo installation.
# You will have to set execute permission before using those script files.

# Script to create the user's home directory when adding a new user
script_createDirUserHome=/usr/local/kitodo/scripts/script_createDirUserHome.sh

# Script to create the directory for a new process
script_createDirMeta=/usr/local/kitodo/scripts/script_createDirMeta.sh

# Script to create a symbolic link in the user home direcory and set
# permissions for the user
script_createSymLink=/usr/local/kitodo/scripts/script_createSymLink.sh

# Script to remove the symbolic link from the user home directory
script_deleteSymLink=/usr/local/kitodo/scripts/script_deleteSymLink.sh


# -----------------------------------
# Runnotes
# -----------------------------------

# Filename of the XSLT file for transforming old metadata files which need to
# be in the xslt folder above
xsltFilenameMetadataTransformation=MetsModsGoobi_to_MetsKitodo.xsl


# -----------------------------------
# Images
# -----------------------------------

# Prefix for image names as regex. Default is 8 digits \\d{8} and gets
# validated
image.prefix=\\d{8}

# Sorting of images. At this time implemented sorting options:
# - number (default): 1 is lesser then 002, compares the number of image names,
#       characters other than digits are not supported
# - alphanumeric: 1 is greater then 002, compares character by character of
#       image names, all characters are supported
image.sorting=number

image.doneDirectoryName=fertig/


# =============================================================================
#      VISUAL APPEARANCE
# =============================================================================
# -----------------------------------
# Internationalization
# -----------------------------------

# Absolute path to the directory that the resource bundle files are stored in,
# terminated by a directory separator ("/").
# Note: If this directory DOESN'T EXIST, the internal resource bundles will be
#       used. If this directory exists BUT DOES NOT CONTAIN suitable resources,
#       the screens will not work as expected.
directory.messages=/usr/local/kitodo/messages/

# Start-up language: If not set, Kitodo.Production will start up with the
# language best matching the user's Accept-Languages HTTP Request header. You
# can override this behaviour by setting a default language here:
# language.force-default=de

# Default language: If no Accept-Language Http Request header is present, use the following language:
language.default=de

metadataLanguage.list=Deutsch-de&English-en

# -----------------------------------
# Data protection
# -----------------------------------

# The General Data Protection Regulation or local law might require to set this value to true.
# anonymized statistics, displaying user on steps, etc
# possible values: true/false
anonymize=true

# enable / disable search for steps done by user
withUserStepDoneSearch=false


# =============================================================================
#      METADATA PROCESSING
# =============================================================================
# -----------------------------------
# Catalogue search
# -----------------------------------

# How many hits per page do you want to have displayed?
catalogue.hitlist.pageSize=12

# You may specify a timeout for database catalogue responses in milliseconds
# after that the network interaction can be considered as failed. Note that in
# large database-driven systems the search for a frequent term may take more
# than a quarter of an hour (> 900.000 ms).
catalogue.timeout=1800000


# -----------------------------------
# Metadata editor behaviour
# -----------------------------------

# locking time in milliseconds
metsEditor.lockingTime=180000

# use special image folder for METS editor if exists (define suffix here)
metsEditor.defaultSuffix=jpeg

# use automatic default pagination
metsEditor.useAutomaticPagination=true

# use special pagination type for automatic default pagination (uncounted, roman, arabic)
metsEditor.defaultPagination=uncounted

# use a maximum of characters to display titles in the left part of mets editor, the default value is 0 (everything is displayed)
metsEditor.maxTitleLength=0

# initialise all sub elements in Mets editor to assign default values, default value is true
metsEditor.enableDefaultInitialisation=true

# display the file manipulation dialog within the mets editor
metsEditor.displayFileManipulation=true

# Comma-separated list of separators available for pagination modes where two
# pages are on one image. Enclose in double quotes if contains white space or
# comma. Example:
#
# pageSeparators=" ",",",;," , "," ; "," / "
#
# Defaults to one single white space:
metsEditor.pageSeparators=" "


# -----------------------------------
# backup of metadata configuration
# -----------------------------------
numberOfMetaBackups=8


# -----------------------------------
# Metadata enrichment
# -----------------------------------

# Feature of automatic meta data inheritance and enrichment. If this is
# enabled, all meta data elements from a higher level of the logical document
# structure are automatically inherited and lower levels are enriched with them
# upon process creation, given they have the same meta data type addable.
#useMetadataEnrichment=false


# -----------------------------------
# Data copy rules
# -----------------------------------

# Data copy rules may be used to copy Kitodo internal data and metadata.
# Copying can be done either on catalogue query or on DMS export.
# A copy rule consists of a location to assign the data to, an assignment
# operator and a location to get the data from, separated by blanks. Multiple
# copy rules are separated using semicolon (;). Available operators are:
#
#    =    The value from the right hand side will be set on the left hand side.
#         An existing value will be overwritten. If the right hand side doesn't
#         exist, nothing happens.
#
#   ""=   Copies right to left in case that the right hand side exists and the
#         left hand side's path is available, but the metadatum is NOT YET SET
#         on the corresponding
#
# =format Creates a value as defined by String.format(String, Object...) and
#         sets it on the left hand side. An existing value will be overwritten.
#         The first argument is used as format string, the other arguments are
#         inserted into the format string as defined by the format string.
#         If the inserted arguments have an argument index, they are converted
#         to conform to the argument category required for the respective
#         conversion. If the right hand side doesn't exist, nothing happens.
#
# Right hand side expressions can be variable, metadata, string or destination
# reference selectors. Left hand side expressions can only be metadata
# selectors.
#
# A variable selector is a $ sign followed by the java classes' field name(s).
# Several fields can be chained. The result will be the result of the function
# String.valueOf(Object) invoked on the last field of the chain. Examples:
#       $process.id                     # Process ID
#       $process.docket.file            # File name of docket
#       $process.projekt.titel          # Title of digitisation project
#
# Notes: On catalogue query, "process" refers to the origin process (template)
#        whereas on DMS export "process" refers to the process being exported.
#        From v. 1.11 on, if DMS export is performed from by an automatic step
#        "process" will be an object of class de.sub.goobi.persistence.apache.
#        ProcessObject whose contents differ from de.sub.goobi.beans.Prozess,
#        so variable selectors will evaluate differently.
#
# Metadata selectors are specified as paths though the logical structure
# element tree. They use forward slashes "/" as separators, where a single
# slash references to the top level. "*" may be used for "any element", square
# braces may be used for referring to a certain element by its index.
# [>] refers to the last available index. For the left hand side of =format,
# [*] refers to all elements. The metadata element to be read or set is
# attached after an at ("@") symbol.Examples:
#       /@TitleDocMain                  # Main title of top struct
#       /*[0]@CurrentNoSorting          # Order number of first child
#       /Chapter[*]@TitleDocMain        # Main title of all chapters
#
# Strings can be used as arguments. They must be double-qoted (""). Example:
#       "%1$04d-%2$02d-%3$02d"          # a format string
#
# Destination reference selectors can be used on the right hand side to refer
# to a level of document structure that the left hand side (destination) will
# resolve to. If the left hand side is applied to several locations it can be
# used to read from the corresponding element in the document structure tree.
# They consist of a number sign (#) followed by the level. Examples:
#       #0                              # Equal to /
#       #1                              # Respective left hand side child
#       #2                              # Respective left hand side grandchild
#
# The following code copies the sort number from the first child to the top
# struct, given it does not yet have one, and the main title from the top
# struct to the first child, given it does not yet have one:
#
# /@CurrentNoSorting ""= /*[0]@CurrentNoSorting;/*[0]@TitleDocMain ""= /@TitleDocMain
#
# The following example copies the process id to a metadatum on the top-level
# document structure element (the metadatum must have been configured before):
#
# /@GoobiIdentifier = $process.id
#
# This example creates a metadatum DatePublished on each Issue of a newspaper,
# combining into it the metadata from its respective ancestors:
#
# /PublicationYear[0]/PublicationMonth[*]/PublicationDay[*]/Issue@DatePublished =format "%1$04d-%2$02d-%3$02d" #1@TitleDocMain #2@TitleDocMainShort #3@TitleDocMainShort

#copyData.onCatalogueQuery=/@CurrentNoSorting ""\= /*[0]@CurrentNoSorting;/*[0]@TitleDocMain ""\= /@TitleDocMain
#copyData.onExport=/@GoobiIdentifier \= $process.id;/PublicationYear[0]/PublicationMonth[*]/PublicationDay[*]/Issue@DatePublished \=format "%1$04d-%2$02d-%3$02d" #1@TitleDocMain #2@TitleDocMainShort #3@TitleDocMainShort


# -----------------------------------
# Metadata validation
# -----------------------------------

# grundsaetzliche Metadatenvalidierung durchfuehren oder nicht
useMetadatenvalidierung=true

# Validierung der Vorgangstitel ueber regulaeren Ausdruck
validateProzessTitelRegex=[\\w-]*

# Validierung des Identifiers ueber regulaeren Ausdruck
# Regular Expression for validating the identifier
validateIdentifierRegex=[\\w\\|-]


# =============================================================================
#      AUTOMATION
# =============================================================================
# -----------------------------------
# Mass process generation
# -----------------------------------

massImportAllowed=true

MassImportUniqueTitle=true

# Colours used to represent the issues in the calendar editor
issue.colours=#CC0000;#0000AA;#33FF00;#FF9900;#5555FF;#006600;#AAAAFF;#000055;#0000FF;#FFFF00;#000000

# Minimal average number of pages per process in newspaper process creation
numberOfPages.minimum=1


# -----------------------------------
# Batch processing
# -----------------------------------

# number of maximal items per batch, if not configured the default is 100
batchMaxSize=500

# Turn on or off whether each assignment of processes to or removal from
# batches shall result in rewriting each processes' wiki field in order to
# leave a note there. Enabling this function may slow down operations in the
# batches dialogue.
batches.logChangesToWikiField=false


# -----------------------------------
# content server for PDF generation
# -----------------------------------

pdfAsDownload=true

# If empty, internal KitodoContentServer will be used, make sure
# to configure it in kitodoContentServerConfig.xml
# Example: http://localhost:8080/kitodo/gcs/gcs?action=pdf\&metsFile=
kitodoContentServerUrl=

# TimeOut for GoobiContentServlet-Request via HTTP in ms (default value, if
# nothing defined here: 60000)
kitodoContentServerTimeOut=30000


# -----------------------------------
# Task manager
# -----------------------------------

# Overrides the limit of tasks run in parallel. Defaults to the number of
# available cores.
#taskManager.autoRunLimit=1

# Sets the time interval between two inspections of the task list. Defaults to
# 2000 ms.
#taskManager.inspectionIntervalMillis=2000

# Sets the maximum number of failed threads to keep around in RAM. Defaults to
# 10. Keep in mind that zombie processes still occupy all their resources and
# aren't available for garbage collection, so choose these values as
# restrictive as possible.
#taskManager.keepThreads.failed.count=10

# Sets the maximum time to keep failed threads around in RAM. Defaults to
# 250 minutes (4 hours, 10 minutes). Keep in mind that zombie processes still
# occupy all their resources and aren't available for garbage collection, so
# choose these values as restrictive as possible.
#taskManager.keepThreads.failed.minutes=250

# Sets the maximum number of successfully finished threads to keep around in
# RAM. Defaults to 3. Keep in mind that zombie processes still occupy all
# their resources and aren't available for garbage collection, so choose
# these values as restrictive as possible.
#taskManager.keepThreads.successful.count=3

# Sets the maximum time to keep successfully finished threads around in RAM.
# Defaults to 20 minutes. Keep in mind that zombie processes still occupy all
# their resources and aren't available for garbage collection, so choose
# these values as restrictive as possible.
#taskManager.keepThreads.successful.minutes=20

# Sets whether or not to show an option to "add a sample task" in the task
# manager. This is---if for anything at all---useful for debugging or
# demonstration purposes only. Defaults to false.
#taskManager.showSampleTask=false


# -----------------------------------
# Export to presentation module
# -----------------------------------

# If you set this to true the exports will be done asynchronously (in the
# background). This requires that the automatic export was set up in the
# project settings.
asynchronousAutomaticExport=true

automaticExportWithImages=true

automaticExportWithOcr=true

ExportValidateImages=true

# if this parameter is missing or 'false' the old export mechanism is used,
# otherwise there is no timelimit for export
exportWithoutTimeLimit=true


# =============================================================================
#      REMOTE SERVICES
# =============================================================================
# -----------------------------------
# LDAP Configuration
# -----------------------------------

# Logins ueber LDAP verwenden
ldap_use=false

ldap_AttributeToTest=

ldap_ValueOfAttribute=

useLocalDirectory=true

ldap_useTLS=false


# -----------------------------------
# Authority control configuration
# -----------------------------------
# To store authority records in MODS, an attribute named "authority" has to be
# recorded in the data file. Since you will only have to provide the norm data
# record itself in the Kitodo front end, a mapping from the base URL (also known
# as "authorityURI") to the named attribute "authority" must be provided. For
# the list of legal values, see:
# http://www.loc.gov/standards/sourcelist/name-title.html#codes
#
# The mapping must be provided in scheme: authority.<authorityURI>.id=<value>
# The colon as part of the HTTP URL must be escaped by a single backslash.
# For example, to map the URL "http://d-nb.info/gnd/" where the Integrated
# Authority File (GND) is published, to the abstract name "gnd", use:
# authority.http\://d-nb.info/gnd/.id=gnd
authority.http\://d-nb.info/gnd/.id=gnd

# You may want to specify the base URL of your preferred authority records
# database once here to have it pre-filled-in automatically in authority
# record input elements. For example, to use the Integrated Authority File
# (GND) as your preferred authority records database, use:
# authority.default=http\://d-nb.info/gnd/

authority.default=http\://d-nb.info/gnd/


# =============================================================================
#      FUNCTIONAL EXTENSIONS
# =============================================================================
# -----------------------------------
# OCR service access
# -----------------------------------

# Show OCR button for selected structural element
showOcrButton=false

# Base path to OCR, without parameters
ocrUrl=

# -----------------------------------
# Display process properties
# -----------------------------------

# Process properties to be displayed in process list as custom columns
processPropertyColumns=
# Process properties to be displayed in task list as custom columns
taskProcessPropertyColumns=

# -----------------------------------
# ActiveMQ web services
# -----------------------------------

# If you want to use Kitodo's ActiveMQ web service interface, set the host here
#activeMQ.hostURL=failover:(tcp://localhost:61616?closeAsync=false)

# You can provide a topic that Kitodo reports results and status messages to
#activeMQ.results.topic=KitodoProduction.ResultMessages.Topic

# By default, Kitodo instructs the server to keep status messages for a
# equivalent of 7 days. You can change this value (in milliseconds) to meet
# your needs. 0 will disable the deletion of messages completely. (However,
# the messages will only available on the Active MQ server if your
# TopicSubscriber is online with the Active MQ server before the message is
# sent. You might therefore consider to configure the timeToLive for offline
# usage within the Active MQ server's activemq.xml file by adding a
#
#   <policyEntry topic="KitodoProduction.ResultMessages.Topic">
#       <subscriptionRecoveryPolicy>
#           <timedSubscriptionRecoveryPolicy recoverDuration="604800000" />
#       </subscriptionRecoveryPolicy>
#   </policyEntry>
#
# block inside the <policyEntries>-Element. "recoverDuration" has to be given
# in milliseconds here, too.)
#activeMQ.results.timeToLive=604800000

# You can provide a queue from which messages are read to create new processes
#activeMQ.createNewProcess.queue=KitodoProduction.CreateNewProcesses.Queue

# You can provide a queue from which messages are read to finalise steps
#activeMQ.finaliseStep.queue=KitodoProduction.FinaliseStep.Queue


# -----------------------------------
# Elasticsearch properties
# -----------------------------------

elasticsearch.host=localhost
elasticsearch.port=9200
elasticsearch.protocol=http
elasticsearch.index=kitodo
elasticsearch.batch=250
elasticsearch.useAuthentication=true
elasticsearch.user=kitodo
elasticsearch.password=kitodo


# =============================================================================
#      CONFIGURATION OF PLUG-INS
# =============================================================================

# -----------------------------------
# ImageManagement
# -----------------------------------

# If ImageMagick is not on the PATH, or the convert command is hidden by
# another convert in C:\Windows\System32\, which is earlier on the PATH,
# you can manually set the ImageMagick search path here. (This is mainly a
# problem in Windows environments.)

#ImageManagement.searchPath=C:\\Program Files\\ImageMagick-7.0.7-Q16

# If the ImageManagement needs to temporarily write files, you can set the
# directory to use here:

#ImageManagement.tmpDir=/tmp/

# The ImageManagement.param.* section can be used to pass arbitrary parameters
# to ImageMagick. You can set limits here. For a description, see:
# https://www.imagemagick.org/script/command-line-options.php?#limit

#ImageManagement.param.limit.map=40MB
#ImageManagement.param.limit.memory=40MB

# Timeout for a singular ImageMagick operation in seconds. Defaults to 2 hours.

#ImageManagement.timeoutSec=7200

# ImageMagick can be executed remotely using SSH. You can list several hosts
# here, separated by comma. Key-based authentication must be properly set up.
# File system paths must be (mounted) equally on the remote machine(s).

#ImageManagement.sshHosts=user@rhost1.kitodo.org,user@rhost2.kitodo.org

# -----------------------------------
# LongTermPreservationValidatiuon
# -----------------------------------

# Maps the output parameter of the JHove process to the interface parameters of
# Kitodo. JHove distinguishes between well-formedness (the first value) and
# validity (the second value) of an image. Depending on the output state, the
# process either runs through (SUCCESS), must be continued manually (WARNING)
# or is locked (ERROR). With manual processing, the continuation is always
# locked. The mapping can be changed as required.

LongTermPreservationValidation.mapping.FALSE.FALSE=ERROR
LongTermPreservationValidation.mapping.FALSE.TRUE=ERROR
LongTermPreservationValidation.mapping.FALSE.UNDETERMINED=ERROR
LongTermPreservationValidation.mapping.TRUE.FALSE=WARNING
LongTermPreservationValidation.mapping.TRUE.TRUE=SUCCESS
LongTermPreservationValidation.mapping.TRUE.UNDETERMINED=SUCCESS
LongTermPreservationValidation.mapping.UNDETERMINED.FALSE=ERROR
LongTermPreservationValidation.mapping.UNDETERMINED.TRUE=SUCCESS
LongTermPreservationValidation.mapping.UNDETERMINED.UNDETERMINED=WARNING

file.maxWaitMilliseconds=150000

metadata.search.fields=TitleDocMain&TSL_ATS

# Default client parameter to be returned if no session client could be determined by user service.
defaultClientId=0
